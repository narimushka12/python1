Task 1. Lists
1.1
a = input(" ")
user_input.lower= user_input.lower()
list = list(user_input_lower.replace(" ", " "))

print(list)

1.2
from collections import Counter

a = ['p', 'u', 'l', 'p', ' ', 'f', 'i', 'c', 't', 'i', 'o', 'n']

kolvo_symbols = Counter(a)

list_a = list(kolvo_symbols.items())

print(list_a)

1.3
list_a = [('p', 2), ('u', 1), ('l', 1), (' ', 1), ('f', 1), ('i', 2), ('c', 1), ('t', 1), ('o', 1), ('n', 1)]

vowels = [ 'i', 'o', 'u']
list_vow = [(char, freq) for char, freq in list_a if char in vowels]
list_cons = [(char, freq) for char, freq in list_a if char.isalpha() and char not in vowels]
list_sym = [(char, freq) for char, freq in list_a if not char.isalpha()]

print("list_vow =", list_vow)
print("list_cons =", list_cons)
print("list_sym =", list_sym)

Task 2
2.1 
a = input("имя: ")
b = list(map(int, input("оценки: ").split()))
c = list(map(float, input("оценки за лабораторную работу: ").split()))
d = list(map(int, input("оценки за тест: ").split()))


student = {
    'name': a,
    'assignment': b,
    'lab': c,
    'test': d
}

print("student =", student)

2.2
student = {
    'name': 'Adam',
    'assignment': [82, 56, 44, 30],
    'test': [78, 77],
    'lab': [78.2, 77.2]
}

submission_check = {student['name']: len(student['assignment']) + len(student['lab']) + len(student['test'])}

print(submission_check)

2.3
student_name = input("Enter student's name: ")
assignment_scores = list(map(int, input("Enter scores for assignments (separated by space): ").split()))
lab_scores = list(map(float, input("Enter scores for labs (separated by space): ").split()))
test_scores = list(map(float, input("Enter scores for tests (separated by space): ").split()))


submission_rate = {student_name: len(assignment_scores) + len(lab_scores) + len(test_scores)}

student = {
    'name': student_name,
    'assignment': assignment_scores,
    'lab': lab_scores,
    'test': test_scores
}

if submission_rate[student_name] >= 4:
    final_grade = 0.3 * (sum(assignment_scores) / len(assignment_scores)) + 0.5 * (sum(lab_scores) / len(lab_scores)) + 0.2 * (sum(test_scores) / len(test_scores))
    student['final_grade'] = round(final_grade, 2)
else:
    student['final_grade'] = 0

print("student =", student)

2.4
s1 = {'name': 'Adam', 'assignment': [82, 56, 44, 30], 'test': [78, 77], 'lab': [78.2, 77.2], 'final_grade': 70.19}
s2 = {'name': 'Kevin', 'assignment': [82, 30], 'test': [], 'lab': [78.2], 'final_grade': 0}

students = {s1['name']: {k: v for k, v in s1.items() if k != 'name'} for s1 in [s1, s2]}

print("students =", students)

Task 3
3.1
from collections import defaultdict

transactions = []
while True:
    user_input = input("Введите id пользователя и номер транзакция: (“q” для остановки) ")
    if user_input.lower() == 'q':
        break
    try:
        user_id, transaction_type = map(int, user_input.split())
        transactions.append((user_id, transaction_type))
    except ValueError:
        print("Ошибка. Введите корректно")

stats = defaultdict(lambda: {1: 0, 2: 0, 3: 0, 'mft': None, 'lft': None})

for user_id, transaction_type in transactions:
    stats[user_id][transaction_type] += 1

for user, user_stat in stats.items():
    counts = [user_stat[1], user_stat[2], user_stat[3]]
    mft = counts.index(max(counts)) + 1
    lft = counts.index(min(counts)) + 1

    if user_stat[mft] == user_stat[lft]:
        mft = list(reversed(counts)).index(max(counts)) + 1
        lft = counts.index(min(counts)) + 1

    user_stat['mft'] = mft
    user_stat['lft'] = lft

print("stats =", dict(stats))
